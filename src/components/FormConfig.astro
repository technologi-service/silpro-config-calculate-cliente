---
import '../styles/global.css';
import { actions } from "astro:actions";


interface Variable {
  id: number;
  nombre: string;
  peso?: number;
}

const {data, error} = await Astro.callAction(actions.getVariables, {})
---

<section class="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-100 to-green-100">
  <div class="w-full max-w-lg bg-white rounded-2xl shadow-xl p-8">
    <h2 class="text-3xl font-extrabold text-center text-blue-700 mb-6">Configuracion de pesos</h2>
    {error && <p class="text-red-500">{error.message}</p>}
    {data && data.length > 0 ? (
      (data as Variable[]).map((variable: Variable) => (
        <form class="space-y-6 mb-8 variable-form" autocomplete="off" data-id={variable.id}>
          <div class="flex flex-col gap-2">
            <label class="text-lg font-semibold text-gray-700">Nombre</label>
            <input type="text" name="nombre" value={variable.nombre ?? ''} class="border border-gray-300 rounded-lg px-4 py-2 bg-gray-100 text-gray-500 cursor-not-allowed" placeholder="Nombre de la variable" readonly />
          </div>
          <div class="flex flex-col gap-2">
            <label class="text-lg font-semibold text-gray-700">Peso</label>
            <input type="number" step="0.01" name="peso" value={variable.peso?.toString().replace(',', '.') ?? ''} inputmode="decimal" pattern="[0-9]+(\\.[0-9]{1,2})?" class="border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-green-400" placeholder="Peso de la variable" />
          </div>
          <button type="submit" class="w-full py-3 rounded-lg bg-gradient-to-r from-green-400 to-blue-500 text-white font-bold text-lg shadow hover:scale-105 transition-transform">Guardar</button>
        </form>
      ))
    ) : (
      <p class="text-center text-gray-500">No hay variables registradas.</p>
    )}
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.variable-form').forEach(form => {
          form.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formEl = e.currentTarget as HTMLFormElement;
            const id = formEl.getAttribute('data-id');
            const nombre = (formEl.querySelector('input[name="nombre"]') as HTMLInputElement)?.value;
            const peso = parseFloat((formEl.querySelector('input[name="peso"]') as HTMLInputElement)?.value ?? '0');
            const payload = { id: Number(id), nombre, peso };
            console.log('Enviando:', payload);
            const res = await fetch('/api/update-variables', {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(payload)
            });
            const result = await res.json();
            console.log('Respuesta:', result);
          });
        });
      });
    </script>

  </div>
</section>
