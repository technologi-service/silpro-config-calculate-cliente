---
import '../styles/global.css';


// ...existing code...

---

<section class="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-100 to-green-100">
	<div class="w-full max-w-6xl bg-white rounded-2xl shadow-2xl p-8">
		<h2 class="text-4xl font-extrabold text-center text-blue-700 mb-10 tracking-tight">Resumen por Segmento</h2>
		<div id="segmentos-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10"></div>
		<script is:inline>
			document.addEventListener('DOMContentLoaded', async () => {
				const container = document.getElementById('segmentos-container');
				if (!container) return;
				container.innerHTML = `<div class='col-span-full flex flex-col items-center justify-center py-10'>
					<div class='animate-spin rounded-full h-10 w-10 border-t-4 border-b-4 border-blue-500 mb-3'></div>
					<span class='text-blue-500 font-semibold text-lg'>Cargando segmentos...</span>
				</div>`;
				try {
					const res = await fetch('/api/segmento-dividido');
					const data = await res.json();
					if (!Array.isArray(data) || data.length === 0) {
						container.innerHTML = '<p class="text-center text-gray-500 col-span-full">No hay datos de segmentos.</p>';
						return;
					}
					container.innerHTML = '';
					data.forEach(seg => {
						// Icono por segmento
						let icon = `<svg class='w-10 h-10 text-white drop-shadow' fill='none' stroke='currentColor' stroke-width='2' viewBox='0 0 24 24'><circle cx='12' cy='12' r='10' stroke='currentColor' stroke-width='2' fill='${seg.segmento_categorico === '5*' ? '#22c55e' : seg.segmento_categorico === '4*' ? '#3b82f6' : seg.segmento_categorico === '3*' ? '#f59e42' : seg.segmento_categorico === '2*' ? '#f59e42' : seg.segmento_categorico === '1*' ? '#f43f5e' : '#64748b'}' /></svg>`;
						container.innerHTML += `
							<div class="rounded-2xl shadow-xl bg-gradient-to-br from-white to-blue-100 p-7 flex flex-col gap-4 border border-blue-200 hover:scale-[1.03] transition-transform">
								<div class="flex items-center gap-4 mb-2">
									${icon}
									<span class="text-2xl font-bold text-blue-700">${seg.segmento_categorico}</span>
									<span class="px-3 py-1 rounded-full bg-blue-100 text-blue-600 text-xs font-semibold ml-auto">${seg.fecha_referencia ?? `${seg.ano}-${seg.mes}`}</span>
								</div>
								<div class="grid grid-cols-2 gap-4">
									<div class="bg-blue-50 rounded-lg p-3 text-blue-900 flex flex-col items-center">
										<span class="font-bold text-sm">Clientes</span>
										<span class="text-xl font-extrabold">${seg.num_clientes ?? seg.numero_clientes}</span>
									</div>
									<div class="bg-green-50 rounded-lg p-3 text-green-900 flex flex-col items-center">
										<span class="font-bold text-sm">Volumen total</span>
										<span class="text-xl font-extrabold">${seg.suma_volumen_total?.toLocaleString() ?? seg.suma_volumen_total}</span>
									</div>
									<div class="bg-blue-50 rounded-lg p-3 text-blue-900 flex flex-col items-center">
										<span class="font-bold text-sm">Promedio volumen</span>
										<span class="text-lg font-bold">${seg.promedio_volumen_total?.toFixed(2) ?? seg.promedio_volumen_por_cliente?.toFixed(2)}</span>
									</div>
									<div class="bg-pink-50 rounded-lg p-3 text-pink-900 flex flex-col items-center">
										<span class="font-bold text-sm">Margen total</span>
										<span class="text-xl font-extrabold">${seg.suma_margen_promedio?.toLocaleString() ?? seg.suma_margen_total?.toLocaleString() ?? '-'}</span>
									</div>
									<div class="bg-pink-50 rounded-lg p-3 text-pink-900 flex flex-col items-center col-span-2">
										<span class="font-bold text-sm">Promedio margen</span>
										<span class="text-lg font-bold">${seg.promedio_margen_promedio?.toFixed(2) ?? '-'}</span>
									</div>
								</div>
							</div>
						`;
					});
				} catch (err) {
					container.innerHTML = '<p class="text-center text-red-500 col-span-full">Error al cargar los datos.</p>';
				}
			});
		</script>
	</div>
</section>
